// Code generated by "stringer -type=parserState"; DO NOT EDIT.

package helium

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[psEOF - -1]
	_ = x[psStart-0]
	_ = x[psPI-1]
	_ = x[psContent-2]
	_ = x[psPrologue-3]
	_ = x[psEpilogue-4]
	_ = x[psCDATA-5]
	_ = x[psDTD-6]
	_ = x[psEntityDecl-7]
	_ = x[psAttributeValue-8]
	_ = x[psComment-9]
	_ = x[psStartTag-10]
	_ = x[psEndTag-11]
	_ = x[psSystemLiteral-12]
	_ = x[psPublicLiteral-13]
	_ = x[psEntityValue-14]
	_ = x[psIgnore-15]
	_ = x[psMisc-16]
}

const _parserState_name = "psEOFpsStartpsPIpsContentpsProloguepsEpiloguepsCDATApsDTDpsEntityDeclpsAttributeValuepsCommentpsStartTagpsEndTagpsSystemLiteralpsPublicLiteralpsEntityValuepsIgnorepsMisc"

var _parserState_index = [...]uint8{0, 5, 12, 16, 25, 35, 45, 52, 57, 69, 85, 94, 104, 112, 127, 142, 155, 163, 169}

func (i parserState) String() string {
	i -= -1
	if i < 0 || i >= parserState(len(_parserState_index)-1) {
		return "parserState(" + strconv.FormatInt(int64(i+-1), 10) + ")"
	}
	return _parserState_name[_parserState_index[i]:_parserState_index[i+1]]
}
