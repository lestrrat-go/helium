// This file is auto-generated by internal/cmd/gennodes/main.go. DO NOT EDIT

package helium

type Document struct {
	content    []byte
	encoding   string
	extSubset  *DTD
	firstChild Node
	intSubset  *DTD
	lastChild  Node
	name       string
	next       Node
	ns         *Namespace
	nsDefs     []*Namespace
	parent     Node
	prev       Node
	private    interface{}
	properties *Attribute
	standalone DocumentStandaloneType
	version    string
}

func (*Document) Type() ElementType {
	return DocumentNode
}

func (n *Document) Content() []byte {
	return n.content
}

func (n *Document) FirstChild() Node {
	return n.firstChild
}

func (n *Document) setFirstChild(v Node) {
	n.firstChild = v
}

func (n *Document) LastChild() Node {
	return n.lastChild
}

func (n *Document) setLastChild(v Node) {
	n.lastChild = v
}

func (n *Document) LocalName() string {
	return n.name
}

func (n *Document) NextSibling() Node {
	return n.next
}

func (n *Document) SetNextSibling(v Node) {
	n.next = v
}

func (n *Document) Parent() Node {
	return n.parent
}

func (n *Document) SetParent(v Node) {
	n.parent = v
}

func (n *Document) PrevSibling() Node {
	return n.prev
}

func (n *Document) SetPrevSibling(v Node) {
	n.prev = v
}

func (n *Document) AddChild(c Node) error {
	return addChild(n, c)
}

func (n *Document) AddContent(b []byte) error {
	return addContent(n, b)
}

func (n *Document) AddSibling(c Node) error {
	return addSibling(n, c)
}

func (n *Document) Replace(v Node) {
	replaceNode(n, v)
}
