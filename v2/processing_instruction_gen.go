// This file is auto-generated by internal/cmd/gennodes/main.go. DO NOT EDIT

package helium

type ProcessingInstruction struct {
	data       string
	doc        *Document
	firstChild Node
	lastChild  Node
	name       string
	next       Node
	parent     Node
	prev       Node
	target     string
}

func (*ProcessingInstruction) Type() ElementType {
	return ProcessingInstructionNode
}

func (n *ProcessingInstruction) OwnerDocument() *Document {
	return n.doc
}

func (n *ProcessingInstruction) SetOwnerDocument(v *Document) {
	n.doc = v
}

func (n *ProcessingInstruction) FirstChild() Node {
	return n.firstChild
}

func (n *ProcessingInstruction) setFirstChild(v Node) {
	n.firstChild = v
}

func (n *ProcessingInstruction) LastChild() Node {
	return n.lastChild
}

func (n *ProcessingInstruction) setLastChild(v Node) {
	n.lastChild = v
}

func (n *ProcessingInstruction) LocalName() string {
	return n.name
}

func (n *ProcessingInstruction) NextSibling() Node {
	return n.next
}

func (n *ProcessingInstruction) SetNextSibling(v Node) {
	n.next = v
}

func (n *ProcessingInstruction) Parent() Node {
	return n.parent
}

func (n *ProcessingInstruction) SetParent(v Node) {
	n.parent = v
}

func (n *ProcessingInstruction) PrevSibling() Node {
	return n.prev
}

func (n *ProcessingInstruction) SetPrevSibling(v Node) {
	n.prev = v
}

func (n *ProcessingInstruction) AddChild(c Node) error {
	return addChild(n, c)
}

func (n *ProcessingInstruction) AddContent(b []byte) error {
	return addContent(n, b)
}

func (n *ProcessingInstruction) AddSibling(c Node) error {
	return addSibling(n, c)
}

func (n *ProcessingInstruction) Content() []byte {
	return getContent(n)
}

func (n *ProcessingInstruction) Replace(v Node) {
	replaceNode(n, v)
}
