// This file is auto-generated by internal/cmd/genhandler/main.go. DO NOT EDIT

package sax

import "errors"

var ErrHandlerUnimplemented = errors.New(`handler is unimplemented`)

type DocumentLocator interface{} // TODO

type Entity interface {
	Name() string
	SetOrig(string)
	EntityType() int
	Content() []byte
	Checked() bool
	MarkChecked()
}

type Enumeration interface{}

type ParseInput interface{} // TODO

type UserData interface{}

type Namespace interface {
	Prefix() string
	URI() string
}

type Attribute interface {
	LocalName() string
	Name() string
	Prefix() string
	Value() string
	IsDefault() bool
}

type AttributeDeclHandler interface {
	AttributeDecl(UserData, string, string, int, int, string, Enumeration) error
}

type CDataBlockHandler interface {
	CDataBlock(UserData, []byte) error
}

type CharactersHandler interface {
	Characters(UserData, []byte) error
}

type CommentHandler interface {
	Comment(UserData, []byte) error
}

type EndDocumentHandler interface {
	EndDocument(UserData) error
}

type EndElementNSHandler interface {
	EndElementNS(UserData, string, string, string) error
}

type EntityDeclHandler interface {
	EntityDecl(UserData, string, int, string, string, string) error
}

type ErrorHandler interface {
	Error(UserData, string, ...interface{}) error
}

type ExternalSubsetHandler interface {
	ExternalSubset(UserData, string, string, string) error
}

type GetEntityHandler interface {
	GetEntity(UserData, string) (Entity, error)
}

type GetParameterEntityHandler interface {
	GetParameterEntity(UserData, string) (Entity, error)
}

type HasExternalSubsetHandler interface {
	HasExternalSubset(UserData) (bool, error)
}

type HasInternalSubsetHandler interface {
	HasInternalSubset(UserData) (bool, error)
}

type IgnorableWhitespaceHandler interface {
	IgnorableWhitespace(UserData, []byte) error
}

type InternalSubsetHandler interface {
	InternalSubset(UserData, string, string, string) error
}

type IsStandaloneHandler interface {
	IsStandalone(UserData) (bool, error)
}

type NotationDeclHandler interface {
	NotationDecl(UserData, string, string, string) error
}

type ProcessingInstructionHandler interface {
	ProcessingInstruction(UserData, string, string) error
}

type ReferenceHandler interface {
	Reference(UserData, string) error
}

type ResolveEntityHandler interface {
	ResolveEntity(UserData, string, string) (ParseInput, error)
}

type SetDocumentLocatorHandler interface {
	SetDocumentLocator(UserData, DocumentLocator) error
}

type StartDocumentHandler interface {
	StartDocument(UserData) error
}

type StartElementNSHandler interface {
	StartElementNS(UserData, string, string, string, []Namespace, []Attribute) error
}

type UnparsedEntityDeclHandler interface {
	UnparsedEntityDecl(UserData, string, string, string, string) error
}

// Handler is a complete SAX2 handler that can react to all
// possible event types. If the paticular event is not handled
// a ErrHandlerUnimplemented error will be returned
type Handler interface {
	AttributeDeclHandler
	CDataBlockHandler
	CharactersHandler
	CommentHandler
	EndDocumentHandler
	EndElementNSHandler
	EntityDeclHandler
	ErrorHandler
	ExternalSubsetHandler
	GetEntityHandler
	GetParameterEntityHandler
	HasExternalSubsetHandler
	HasInternalSubsetHandler
	IgnorableWhitespaceHandler
	InternalSubsetHandler
	IsStandaloneHandler
	NotationDeclHandler
	ProcessingInstructionHandler
	ReferenceHandler
	ResolveEntityHandler
	SetDocumentLocatorHandler
	StartDocumentHandler
	StartElementNSHandler
	UnparsedEntityDeclHandler
}
