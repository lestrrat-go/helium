// This file is auto-generated by internal/cmd/gennodes/main.go. DO NOT EDIT

package helium

type DTD struct {
	attributes map[string]*AttributeDecl
	doc        *Document
	elements   map[string]*ElementDecl
	entities   map[string]*Entity
	firstChild Node
	lastChild  Node
	name       string
	next       Node
	parent     Node
	pentities  map[string]*Entity
	prev       Node
}

func (*DTD) Type() ElementType {
	return DTDNode
}

func (n *DTD) OwnerDocument() *Document {
	return n.doc
}

func (n *DTD) SetOwnerDocument(v *Document) {
	n.doc = v
}

func (n *DTD) FirstChild() Node {
	return n.firstChild
}

func (n *DTD) setFirstChild(v Node) {
	n.firstChild = v
}

func (n *DTD) LastChild() Node {
	return n.lastChild
}

func (n *DTD) setLastChild(v Node) {
	n.lastChild = v
}

func (n *DTD) LocalName() string {
	return n.name
}

func (n *DTD) NextSibling() Node {
	return n.next
}

func (n *DTD) SetNextSibling(v Node) {
	n.next = v
}

func (n *DTD) Parent() Node {
	return n.parent
}

func (n *DTD) SetParent(v Node) {
	n.parent = v
}

func (n *DTD) PrevSibling() Node {
	return n.prev
}

func (n *DTD) SetPrevSibling(v Node) {
	n.prev = v
}

func (n *DTD) AddChild(c Node) error {
	return addChild(n, c)
}

func (n *DTD) AddContent(b []byte) error {
	return addContent(n, b)
}

func (n *DTD) AddSibling(c Node) error {
	return addSibling(n, c)
}

func (n *DTD) Content() []byte {
	return getContent(n)
}

func (n *DTD) Replace(v Node) {
	replaceNode(n, v)
}
